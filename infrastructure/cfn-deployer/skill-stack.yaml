AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SkillId:
    Type: String
  LambdaRuntime:
    Type: String
  LambdaHandler:
    Type: String
  CodeBucket:
    Type: String
  CodeKey:
    Type: String
  CodeVersion:
    Type: String
Resources:
  AlexaSkillIAMRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: alexaSkillExecutionPolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:*
                  Resource: arn:aws:logs:*:*:*
  AlexaSkillFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref CodeBucket
        S3Key: !Ref CodeKey
        S3ObjectVersion: !Ref CodeVersion
      Handler: !Ref LambdaHandler
      Runtime: !Ref LambdaRuntime
      Role: !GetAtt AlexaSkillIAMRole.Arn
      MemorySize: 512
      Timeout: 60
      Environment: 
        Variables:
          WEBAPP_S3_BUCKET_ROOT: !Join
            - ''
            - - 'https://'
              - !GetAtt
                - WebAppBucket
                - RegionalDomainName
  AlexaSkillFunctionEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt AlexaSkillFunction.Arn
      Principal: alexa-appkit.amazon.com
      EventSourceToken: !Ref SkillId
  AlexaSkillFunctionEventPermissionSmartHome:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt AlexaSkillFunction.Arn
      Principal: alexa-connectedhome.amazon.com
      EventSourceToken: !Ref SkillId
  AlexaSkillFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AlexaSkillFunction}
      RetentionInDays: 14
  WebAppBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties: 
      AccessControl : PublicRead
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - 'Authorization'
            AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - '*'
            Id: AllowCrossOrigin
            MaxAge: 3600
Outputs:
  SkillEndpoint:
    Description: LambdaARN for the regional endpoint
    Value: !GetAtt AlexaSkillFunction.Arn
  WebAppBucketName:
    Description: Generated bucket name for web app hosted on S3
    Value: !Ref WebAppBucket
  WebAppURLRoot:
    Description: Root URL for web app hosted on S3
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WebAppBucket
          - RegionalDomainName
